/*
* Copyright (c) 2021-2022 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define SYMBOLS 1
#define NUM     2
#define NAV     3
#define CONFIG  4

#define Undo   LC(Z)
#define Cut    LC(X)
#define Copy   LC(C)
#define Paste  LC(V)
#define Redo   LC(Y)


/ {
  behaviors {
    td1: tap_dance_1 {
      compatible = "zmk,behavior-tap-dance";
      label = "TD1";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp N1>, <&kp F1>;
    };
    td2: tap_dance_2 {
      compatible = "zmk,behavior-tap-dance";
      label = "TD2";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp N2>, <&kp F2>;
    };
    td3: tap_dance_3 {
      compatible = "zmk,behavior-tap-dance";
      label = "TD3";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp N3>, <&kp F3>;
    };
    td4: tap_dance_4 {
      compatible = "zmk,behavior-tap-dance";
      label = "TD4";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp N4>, <&kp F4>;
    };
    td5: tap_dance_5 {
      compatible = "zmk,behavior-tap-dance";
      label = "TD5";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp N5>, <&kp F5>;
    };
    td6: tap_dance_6 {
      compatible = "zmk,behavior-tap-dance";
      label = "TD6";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp N6>, <&kp F6>;
    };
    td7: tap_dance_7 {
      compatible = "zmk,behavior-tap-dance";
      label = "TD7";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp N7>, <&kp F7>;
    };
    td8: tap_dance_8 {
      compatible = "zmk,behavior-tap-dance";
      label = "TD8";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp N8>, <&kp F8>;
    };
    td9: tap_dance_9 {
      compatible = "zmk,behavior-tap-dance";
      label = "TD9";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp N9>, <&kp F9>;
    };
    td10: tap_dance_10 {
      compatible = "zmk,behavior-tap-dance";
      label = "TD10";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp N0>, <&kp F10>;
    };
    td11: tap_dance_11 {
      compatible = "zmk,behavior-tap-dance";
      label = "TD11";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp KP_SLASH>, <&kp F11>;
    };
    td12: tap_dance_12 {
      compatible = "zmk,behavior-tap-dance";
      label = "TD12";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp KP_ASTERISK>, <&kp F12>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &none &kp Q &kp W &kp E &kp R &kp T                                                                               &kp Y &kp U &kp I &kp O &kp P &none
        &none &kp A &mt LSHIFT S &kp D &kp F &kp G                                                         &kp H &kp J &kp K &mt RSHIFT L &kp SEMICOLON &none
        &none &mt LCTRL Z &mt LGUI X &mt LALT C &kp V &kp B &kp LC(C)                  &kp LC(V) &kp N &kp M &mt RALT COMMA &mt RGUI DOT &mt RCTL SLASH &none
                                   &kp ESCAPE &kp TAB &kp SPACE &mo 2                  &mo 1 &lt 3 ENTER &kp BACKSPACE &kp DELETE
      >;

      sensor-bindings = <&inc_dec_kp LC(LG(RIGHT)) LC(LG(LEFT))>;
    };

    symbols_layer {
      bindings = <
        &none &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT                                            &kp CARET &kp AMPS &kp ASTRK &kp UNDER &kp EQUAL &none
        &none &kp GRAVE &kp LSHIFT &kp LBKT &kp LBRC &kp KP_LPAR                                     &kp KP_RPAR &kp RBRC &kp RBKT &kp RSHIFT &kp SQT &none
        &none &kp LCTRL &kp LGUI &kp LALT &kp TILDE &kp MINUS &caps_word               &kp LG(LS(S)) &kp KP_PLUS &kp BSLH &kp RALT &kp RGUI &kp RCTRL &none
                                              &trans &trans &trans &mo 4               &trans &trans &trans &trans
      >;

      sensor-bindings = <&inc_dec_kp LC(LS(Z)) LC(Z)>;
    };

    num_layer {
      bindings = <
        &none &none &kp PSCRN &kp SLCK &kp PAUSE_BREAK &kp LNLCK                             &td12 &td7 &td8 &td9 &kp KP_MINUS &none
        &none &none &kp LSHIFT &none &kp INSERT &kp HOME                                      &td11 &td4 &td5 &td6 &kp KP_PLUS &none
        &none &kp LCTRL &kp LGUI &kp LALT &kp DELETE &kp END &kp LC(F5)            &kp LS(INS) &td10 &td1 &td2 &td3 &kp KP_DOT &none
                                            &trans &trans &trans &trans            &mo 4 &trans &trans &trans
      >;

      sensor-bindings = <&inc_dec_kp LC(TAB) LC(LS(TAB))>;
    };

    nav_layer {
      bindings = <
        &none &none &none &none &kp END &none                      &kp HOME &kp PAGE_UP &none &none &none &none
        &none &none &kp LSHIFT &kp PAGE_DOWN &none &none         &kp LEFT &kp DOWN &kp UP &kp RIGHT &none &none
        &none &kp LCTRL &kp LGUI &kp LALT &none &none &none           &none &none &none &none &none &none &none
                                &trans &trans &trans &trans           &trans &trans &trans &trans
      >;

      sensor-bindings = <&inc_dec_kp C_AC_SCROLL_UP C_AC_SCROLL_DOWN>;
    };

    config_layer {
      bindings = <
        &none &none &none &none &none &none                      &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none &none
        &none &none &none &none &none &none                                                  &none &none &none &none &none &none
        &none &none &none &none &none &none &bt BT_CLR                                 &none &none &none &none &none &none &none
                           &none &none &none &trans             &trans &none &none &none
      >;

      sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
    };

  };
};